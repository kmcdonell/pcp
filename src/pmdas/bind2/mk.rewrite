#!/bin/sh
#
# Extract a list of know metrics and PMIDs from pmdabind2.pl
#
# my %known_pmids = (
# ...
#    'bind2.memory.total.InUse',		5,
# ...
# );
#
# and generate pmlogrewrite(1) rules to force the PMIDs to be correct.
#

. /etc/pcp.conf

cat <<End-of-File >rewrite.conf
# Rewriting rules for bind2 PMDA metrics to ensure consistent
# PMIDs across Bind versions
#
# Generated: `date`
#

End-of-File
( grep BIND2 <../../pmns/stdpmid ;
  awk <pmdabind2.pl '
$2 == "%known_pmids"	{ inlist = 1; next }
$1 == "#"		{ next }
inlist == 1 && $1 == ");"	{ exit }
inlist == 1		{ print }' \
  | sed \
    -e "s/'//g" \
    -e 's/,//g' \
    -e 's/^  */metric /' \
    -e 's/[ 	][ 	]*\([0-9][0-9]*\)/ { pmid -> BIND2.0.\1 }/' \
) | $PCP_BINADM_DIR/pmcpp -P >>rewrite.conf

cat <<'End-of-File' >>rewrite.conf

# correct semantics
#
metric bind2.memory.total.ContextSize { sem -> instant }
metric bind2.memory.total.Malloced { sem -> instant }

# correct units
#
metric bind2.memory.total.InUse { units -> 1,0,0,byte,0,0 }
metric bind2.memory.total.Lost { units -> 1,0,0,byte,0,0 }
metric bind2.memory.total.ContextSize { units -> 1,0,0,byte,0,0 }
metric bind2.memory.total.Malloced { units -> 1,0,0,byte,0,0 }
metric bind2.memory.total.TotalUse { units -> 1,0,0,byte,0,0 }
End-of-File

exit

