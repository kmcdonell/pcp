#!/bin/sh
#
# Copyright (c) 2003-2004 Silicon Graphics, Inc.  All Rights Reserved.
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# Post installation/upgrade script for PCP
#

prog=`basename $0`
status=1
trap "exit \$status" 0 1 2 15

echo "$prog: PCP for MacOSX Install"

echo "$prog: Writing install log to /var/log/pcp_inst.log"
echo "$prog: Writing install log to /var/log/pcp_inst.log"  > /var/log/pcp_inst.log

if [ ! -d $2 ]
then
    echo "$prog: Unable to open directory of new files ($2)"
    echo "$prog: Unable to open directory of new files ($2)" >> /var/log/pcp_inst.log
    exit
fi

if ./install-pcp -i -l /var/log/pcp_inst.log idb
then
    :
else
    echo "$prog: Install Failed"
    echo "$prog: Install Failed" >> /var/log/pcp_inst.log
    exit
fi

if [ -f /etc/pcp.conf ]
then
    # for all the configuration files we know about, salt away file
    # with a .orig suffix for a subsequent upgrade
    #
    . /etc/pcp.conf
    for conf in \
	$PCP_PMCDCONF_PATH $PCP_PMCDOPTIONS_PATH $PCP_PMCDRCLOCAL_PATH \
	$PCP_PMIECONTROL_PATH $PCP_PMLOGGERCONTROL_PATH \
	$PCP_PMPROXYOPTIONS_PATH $PCP_PMWEBDOPTIONS_PATH
    do
	[ -f $conf ] && cp $conf $conf.orig
    done
fi

# create the user/group account that PCP daemons will use
#
userid=432
groupid=432

if ! dscl . -list /Groups | grep -q '^pcp$' 
then
    dscl . -create /Groups/pcp
    dscl . -create /Groups/pcp PrimaryGroupID $groupid
    dscl . -create /Groups/pcp Password \*
fi

if ! dscl . -list /Users | grep -q '^pcp$' 
then
    dscl . -create /Users/pcp
    dscl . -create /Users/pcp UniqueID $userid
    dscl . -create /Users/pcp UserShell /usr/bin/false
    dscl . -create /Users/pcp RealName 'Performance Co-Pilot'
    dscl . -create /Users/pcp NFSHomeDirectory /var/lib/pcp
    dscl . -create /Users/pcp PrimaryGroupID $groupid
    dscl . -create /Users/pcp Password \*
    dscl . append /Groups/pcp GroupMembership pcp
fi

chown -R pcp:pcp /var/log/pcp/pmcd 2>/dev/null
chown -R pcp:pcp /var/log/pcp/pmlogger 2>/dev/null
chown -R pcp:pcp /var/log/pcp/sa 2>/dev/null
chown -R pcp:pcp /var/log/pcp/pmie 2>/dev/null
chown -R pcp:pcp /var/log/pcp/pmproxy 2>/dev/null

# https://github.com/performancecopilot/pcp/issues/20
defaults write io.pcp.pmtime NSAppSleepDisabled -bool YES

# cull any old files or directories that used to be in the distribution
# but that have gone away or moved somewhere else
#
for file in /var/lib/pcp/config/pmieconf/pcp/pmda_status
do
    [ -f "$file" ] && rm -f "$file"
done
for dir in /var/lib/pcp/config/pmieconf/pcp
do
    [ -d "$dir" ] && rm -rf "$dir"
done

# Now remap the installed binary files so the PCP Library files can be loaded
destination_lib_path=/usr/local/lib

HOMEBREW_SITEPACKAGES=`echo "$(/opt/homebrew/bin/python3-config --prefix)/lib/python3/site-packages"`
for basepath in `echo /usr/local/libexec/pcp/bin /usr/local/bin $HOMEBREW_SITEPACKAGES`; do
	for binary in `ls -1 ${basepath}`; do
      	  echo "Checking $binary"
     	   # do not remap already remapped libraries
      	  for library in `otool -l $basepath/$binary | grep libpcp | grep -v "/usr/local/lib" | awk '{print $2}'`; do
           	     echo "Found PCP Libary: $library needing remapping"
           	     new_lib_loc=$destination_lib_path/$library
           	     install_name_tool -change $library $new_lib_loc $basepath/$binary
           	     echo "Remapped to $new_lib_loc"
       	 done
	done
done
status=0
