#!/bin/sh
# PCP QA Test No. 1893
# Exercise the Linux proc PMDA exe, cwd, psinfo metrics.
#
# Copyright (c) 2021-2022 Red Hat.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

[ $PCP_PLATFORM = linux ] || _notrun "Linux proc PMDA specific test"

_cleanup()
{
    cd $here
    $sudo rm -rf $tmp $tmp.*
}

status=0	# success is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_filter()
{
    sed \
	-e "s/0*$mypid .*sh.] value/MYPID sh] value/g" \
	-e "s/*$mypid or /MYPID or /g" \
	-e "s,$mycwd,CWD,g" \
	-e "s,$myexe,EXE,g" \
    # end
}

# borrowed from utilproc.sh ...
#
# determine path for pwd command to override shell built-in
#
PWDCMD=`which pwd 2>/dev/null | $PCP_AWK_PROG '
BEGIN           { i = 0 }
/ not in /      { i = 1 }
/ aliased to /  { i = 1 }
                { if ( i == 0 ) print }
'`
[ -z "$PWDCMD" ] && PWDCMD=/bin/pwd
eval $PWDCMD -P >/dev/null 2>&1
[ $? -eq 0 ] && PWDCMD="$PWDCMD -P"

# real QA test starts here
mypid=$$
mycwd=`$PWDCMD`
myexe=`readlink /proc/$$/exe`

echo mypid: $mypid > $seq_full
echo mycwd: $mycwd >> $seq_full
echo myexe: $myexe >> $seq_full

echo == check for any exe failures
pminfo -v proc.psinfo.exe
echo done

echo == check exe value for self | tee -a $seq_full
pminfo -f proc.psinfo.exe | tee -a $seq_full | grep -F "inst [$mypid " | _filter
echo done

echo == check for any cwd failure
pminfo -v proc.psinfo.cwd
echo done

echo == check cwd value for self | tee -a $seq_full
pminfo -f proc.psinfo.cwd | tee -a $seq_full | grep -F "inst [$mypid " | _filter
echo done

echo == check for psargs with leading space | tee -a $seq_full
pminfo -f proc.psinfo.psargs > $tmp.psargs
grep -F ' value " ' $tmp.psargs
[ $? -ne 0 ] && cat $tmp.psargs >> $seq_full
echo done

# success, all done
exit
